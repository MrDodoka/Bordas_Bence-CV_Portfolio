@model IEnumerable<dynamic>
@{
    //Variables for easier use
    var mercenary = Context.Request.RouteValues["mercenary"];
    var categories = Model.DistinctBy(x => x.Chategory);
    string category = string.Empty;
    var subCategories = Model.DistinctBy(x => x.SubChategory);
    string subCategory = string.Empty;
    string subSubCategory = string.Empty;
}
<!-- Checks if the "list" has any element in it, if not it will say WIP -->
@if (Model.Count() > 0)
{
    <div>
        <h1 class="mt-3 mb-3">@mercenary Responses</h1>
        <p class="mb-3">
            Voice Responses are contextually triggered lines that play after the player has achieved something,
            for instance killing a certain amount of enemies with a Primary or Melee Weapon,
            or the player has triggered something, like being set on fire.
            The @mercenary has several vocal responses, all of which are listed below (excluding Voice Commands).
        </p>
        <!-- Based on the structure of the TF2 Wiki page, this way it could be done the same way, without "any hard code"
             All of it is dynamically generated based on the provided data.
        -->
        @foreach (var cat in categories)
        {
            category = cat.Chategory;
            <h4 class="border-bottom">@cat.Chategory</h4>
            foreach (var subCat in subCategories.Where(x => x.Chategory.Equals(category)))
            {
                <table class="sound-table">
                    <tbody>
                        <tr>
                            <td class="sound-table-header bg-primary">
                                <strong>@subCat.SubChategory</strong>
                            </td>
                        </tr>
                        <tr>
                            <td class="">
                                <ul class="sound-list p-2 pb-0">
                                    @foreach (var item in Model.Where(x => x.SubChategory.Equals(subCat.SubChategory)))
                                    {
                                        if (subSubCategory.Equals(string.Empty) && !item.SubSubChategory.Equals("None"))
                                        {
                                            subSubCategory = item.SubSubChategory;
                                            <div class="pt-1">@item.SubSubChategory</div>
                                        }
                                        else if (!subSubCategory.Equals(string.Empty) && !item.SubSubChategory.Equals("None") && subSubCategory != item.SubSubChategory)
                                        {
                                            subSubCategory = item.SubSubChategory;
                                            <div class="pt-2">@item.SubSubChategory</div>
                                        }
                                        <li class="sound-list-item">
                                            <img class="play-icon" src="~/imgs/play_sound_icon.png" height="20" onclick="Play('@item.Path')" /> @item.Line
                                        </li>
                                    }
                                </ul>
                            </td>
                        </tr>
                    </tbody>
                </table>
            }
        }
    </div>
}
else
{
    <div class="text-center mt-5">
        <h1>Work In Progress!</h1>
        <p>The page for <strong>@Context.Request.RouteValues["mercenary"]</strong> is under construction!</p>
    </div>
}

